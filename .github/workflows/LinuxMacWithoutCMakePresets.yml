name: Build and run on Linux and Mac without CMakePresets.json

on:
  push: 
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  singleConfig:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compilerCpp: 
          - name: g++
            buildSubDir: Gnu
          - name: clang++
            buildSubDir: Clang
        buildType: [Debug, Release]
        generator: 
          - name: Ninja
            buildDir: buildNinja
          - name: "Unix Makefiles"
            buildDir: buildMake

        linkGTestAsSharedLibrary: 
          # - ON # do not test this option because it works only on with a preinstalled gtest
          - OFF

        exclude:
          - os: macos-latest
            compilerCpp:
              name: g++

    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
        
    - name: Setup Ninja
      # if: ${{matrix.generator.name == Ninja}}
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Tool versions
      shell: bash
      run: | 
        echo g++ --version
        g++ --version
        echo 
        echo clang++ --version
        clang++ --version
        echo 
        echo cmake --version
        cmake --version
        echo 
        echo ninja --version
        ninja --version

    - name: Parameter values
      shell: bash
      run: | 
        echo platform = ${{runner.os}}
        echo generator = ${{matrix.generator.name}}
        echo build_type = ${{matrix.build_type}}
        echo compiler = ${{matrix.compilerCpp.name}}
        echo linkGTestAsSharedLibrary = ${{matrix.linkGTestAsSharedLibrary}}

    - name: CMake configure
      run: > 
        cmake -S . 
        -B ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -G "${{matrix.generator.name}}" 
        -D CMAKE_BUILD_TYPE=${{matrix.buildType}} 
        -D CMAKE_CXX_COMPILER=${{matrix.compilerCpp.name}}
        -D linkGTestAsSharedLibrary=${{matrix.linkGTestAsSharedLibrary}}
      
    - name: CMake build
      run: > 
        cmake 
        --build ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8

    - name: CMake run program
      run: > 
        cmake 
        --build ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8 
        --target run

    - name: CMake run unit tests (gtest and gmock)
      run: > 
        cmake 
        --build ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8 
        --target runUnitTest

    - name: CTest
      run: > 
        ctest 
        --test-dir ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8
        --output-on-failure


  multiConfig:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
        compilerCpp: 
          - name: g++
            buildSubDir: Gnu
          - name: clang++
            buildSubDir: Clang
        buildType: [Debug, Release]
        generator: 
          - name: "Ninja Multi-Config"
            buildDir: buildNinjaMC
          - name: Xcode
            buildDir: buildXcode

        linkGTestAsSharedLibrary: 
          # - ON # do not test this option because it works only on with a preinstalled gtest
          - OFF

        exclude:
          - os: ubuntu-latest
            generator: 
              name: Xcode

          - os: macos-latest
            compilerCpp:
              name: g++

    runs-on: ${{matrix.os}}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Setup Ninja
      # if: ${{matrix.generator.name == "Ninja Multi-Config"}}
      uses: seanmiddleditch/gha-setup-ninja@master

    - name: Tool versions
      shell: bash
      run: | 
        echo g++ --version
        g++ --version
        echo 
        echo clang++ --version
        clang++ --version
        echo 
        echo cmake --version
        cmake --version
        echo 
        echo ninja --version
        ninja --version

    - name: Parameter values
      shell: bash
      run: | 
        echo platform = ${{runner.os}}
        echo generator = ${{matrix.generator.name}}
        echo build_type = ${{matrix.build_type}}
        echo compiler = ${{matrix.compilerCpp.name}}
        echo linkGTestAsSharedLibrary = ${{matrix.linkGTestAsSharedLibrary}}

    - name: CMake configure
      run: > 
        cmake -S . 
        -B ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -G "${{matrix.generator.name}}" 
        -D CMAKE_CXX_COMPILER=${{matrix.compilerCpp.name}}
        -D linkGTestAsSharedLibrary=${{matrix.linkGTestAsSharedLibrary}}
      
    - name: CMake build
      run: > 
        cmake 
        --build ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8 
        --config ${{matrix.buildType}}

    - name: CMake run program
      run: > 
        cmake 
        --build ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8 
        --config ${{matrix.buildType}}
        --target run

    - name: CMake run unit tests (gtest and gmock)
      run: > 
        cmake 
        --build ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8 
        --config ${{matrix.buildType}}
        --target runUnitTest

    - name: CTest
      run: > 
        ctest 
        --test-dir ${{matrix.generator.buildDir}}/${{matrix.compilerCpp.buildSubDir}} 
        -j8
        --config ${{matrix.buildType}}
        --output-on-failure
